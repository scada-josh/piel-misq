DataTable_LT002_Generator: function (paramCustomer, paramGoodsType, paramStartDate, paramEndDate) { 
	// console.log('DataTable_LT002_Generator');




    var total_percentage_dataSet = [];
    var iel_percentage_dataSet = [];
    var dc_percentage_dataSet = [];

    function Datatable_lt002_dataSet(result) {
        // console.log(result);

        fn.leadTimeHighCharts.showLoading("Loading data...");

        // Remove all the chart existing series
        while(fn.leadTimeHighCharts.series.length) {
          fn.leadTimeHighCharts.series[0].remove();
        }





        /***********************/
        /******* % Total *******/
        /***********************/
        var tmpTotalPercentageSerie = [];
        for (var i=0; i < result.rows.length; i++ ) {

            // console.log(result.rows[i].section)
            // var tmpVal = result.rows[i].total_percentage;
            var tmpVal = numeral(result.rows[i].total_percentage).format('0,0.00');
            tmpTotalPercentageSerie.push([result.rows[i].section, parseFloat(tmpVal)]);
        }


        var totalPercentageSeries = {
              name: "% Total",
              color: '#00AB4E',
              type: 'line',
              tooltip: {
                valueSuffix: ' %'
              },
              data: tmpTotalPercentageSerie
        }

        fn.leadTimeHighCharts.addSeries(totalPercentageSeries);



        /***********************/
        /******* % IEL *******/
        /***********************/
        var tmpIelPercentageSerie = [];
        for (var i=0; i < result.rows.length; i++ ) {

            // console.log(result.rows[i].section)
            // var tmpVal = result.rows[i].iel_percentage;
            var tmpVal = numeral(result.rows[i].iel_percentage).format('0,0.00');
            tmpIelPercentageSerie.push([result.rows[i].section, parseFloat(tmpVal)]);
        }


        var ielPercentageSeries = {
              name: "% IEL",
              color: '#0072BC',
              type: 'line',
              tooltip: {
                valueSuffix: ' %'
              },
              data: tmpIelPercentageSerie
        }

        fn.leadTimeHighCharts.addSeries(ielPercentageSeries);


        /***********************/
        /******* % DC *******/
        /***********************/
        // var tmpDcPercentageSerie = [];
        // for (var i=0; i < result.rows.length; i++ ) {

        //     // console.log(result.rows[i].section)
        //     // var tmpVal = result.rows[i].dc_percentage;
        //     var tmpVal = numeral(result.rows[i].dc_percentage).format('0,0.00');
        //     tmpDcPercentageSerie.push([result.rows[i].section, parseFloat(tmpVal)]);
        // }


        // var dcPercentageSeries = {
        //       name: "% DC",
        //       color: '#EC008C',
        //       type: 'line',
        //       tooltip: {
        //         valueSuffix: ' %'
        //       },
        //       data: tmpDcPercentageSerie
        // }

        // fn.leadTimeHighCharts.addSeries(dcPercentageSeries);


        /***********************/
        /******* จำนวนบิล *******/
        /***********************/
        var tmpBillSerie = [];
        for (var i=0; i < result.rows.length; i++ ) {

            // console.log(result.rows[i].section)
            // var tmpVal = result.rows[i].total_percentage;
            var tmpVal = numeral(result.rows[i].bill_all).format('0');
            tmpBillSerie.push([result.rows[i].section, parseInt(tmpVal)]);
        }


        var billSeries = {
              name: "จำนวนบิล",
              // color: '#00AB4E',
              type: 'column',
              yAxis: 1,
              // tooltip: {
              //   valueSuffix: ' บิล'
              // },
              tooltip: {
                // formatter: function() {
                //     // return 'The value for <b>' + this.x + '</b> is <b>' + this.y + '</b>, in series '+ this.series.name;
                //     return "Hello";
                // },
                valueSuffix: ' บิล'
              },
              data: tmpBillSerie
        }

        fn.leadTimeHighCharts.addSeries(billSeries);



        /******* leadTimeHighCharts config. *******/
        fn.leadTimeHighCharts.setTitle(null, { text: moment(paramStartDate).format('DD/MM/YYYY') + " - " + moment(paramEndDate).format('DD/MM/YYYY') });
        fn.leadTimeHighCharts.hideLoading();



    }



    //------------------------ datatable_lt002 -----------------------//
    if (jQuery().dataTable) {

         datatable_lt002 = $('#datatable_lt002').DataTable( {
            "processing": true,
            "bDestroy": true,
            "bAutoWidth": false,
            // "dom": '<"top"fi>rt<"bottom"lp><"clear">',
            "ajax": {
                "url": "../../../../api/restful-api/serviceLevelManager/getLeadTime/",
                "type": "POST",
                "data": function ( d ) {

                        // d.startDate = "2016-08-01";
                        // d.endDate = "2016-08-03";
                        // d.customerID = "12315";
                        // d.goodsType = 1;

                        d.startDate = paramStartDate;
                        d.endDate = paramEndDate;
                        d.customerID = paramCustomer;
                        d.goodsType = paramGoodsType;

                        return d;
                },
                "dataSrc": "rows",
                // "success": function(data) {
                //         // alert(data);
                //         console.log('success');
                //         console.log(data);

                //         // fn.DataTableVehicle_Daily_Render(data);
                //         // DataTableVehicle_Daily_Detail_Render(data);
                // },
                "complete": function (data) {
                    // console.log("complete");
                    // console.log(data.responseJSON);
                    Datatable_lt002_dataSet(data.responseJSON);

                },
                "error": function(jqXHR, textStatus, errorThrown){
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                    console.log('init error: ' + textStatus);
                }
            },
            "deferRender":    true,
            "scrollX":        true,
            "scrollY":        '30vh',
            "scrollCollapse": true,
            "paging":         false,
            // "data": dataSet,
            // "aaData": dataSet,

            <%= partial js_dir + "/javascript-desktop-home-serviceLevel-lt002/partials/fn_DataTable_LT002_Generator/_aoColumnDefs" %>
            <%= partial js_dir + "/javascript-desktop-home-serviceLevel-lt002/partials/fn_DataTable_LT002_Generator/_footerCallback" %>
                                                                                 
            "order" : [] //disable default sorting, eg sorting on 1st column

            
        });

          datatable_lt002.columns.adjust().draw();

    }
    
},
